type Login {
  id: ID!
  user: User!
  email: String!
}

type User {
  id: ID!
  firstName: String
  lastName: String
  email: String
  emailVerified: Boolean
  notes: [Note]
}

type Session {
  id: ID!
  token: String!
}

type Note {
  id: ID!
  createdAt: String!
  updatedAt: String!
  authorId: String!
  author: User!
  title: String
  content: [String]
}

input CreateLoginInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  passwordConfirmation: String!
}

input LoginInput {
  email: String!
  password: String!
}

input NoteInput {
  authorId: ID!
  title: String!
  content: [String]!
}

type Query {
  users: [User]
  session(id: String!): Session
  note(id: String!): Note
  notes: [Note]
}

type Mutation {
  createLogin(input: CreateLoginInput!): Login!
  login(input: LoginInput!): Session!
  logout: Session!
  createNote(input: NoteInput!): Note!
  updateNote(id: String!, input: NoteInput!): Note!
  deleteNote(id: String!): Note!
}
